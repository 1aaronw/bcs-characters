{"ast":null,"code":"var _jsxFileName = \"/Users/aaronwang/bcs-characters/src/Characters/CharacterGrid.js\";\nimport React from \"react\"; //gets name, nickname, portrayal,img\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharacterGrid = _ref => {\n  let {\n    items\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"character-card\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.img,\n              className: \"img-cards\",\n              alt: \"image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 11,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"(\", item.nickname, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Portrayed By: \", item.portrayed]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CharacterGrid;\nexport default CharacterGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterGrid\");","map":{"version":3,"names":["React","CharacterGrid","items","map","item","img","name","nickname","portrayed"],"sources":["/Users/aaronwang/bcs-characters/src/Characters/CharacterGrid.js"],"sourcesContent":["import React from \"react\";\n//gets name, nickname, portrayal,img\nconst CharacterGrid = ({items}) => {\n    return (\n        <div className=\"cards\">\n            {items.map(item => (\n                <div className=\"card\"> \n                    <ul>\n                        <li>\n                            <div className=\"character-card\">\n                                <img src ={item.img} className=\"img-cards\"alt=\"image\" />\n                            </div>\n                        </li>\n                        <div className=\"overlay\">\n                            <div className=\"text\">\n                                <li>\n                                    {item.name}\n                                </li>\n                                <li>\n                                    ({item.nickname})\n                                </li>\n                                <li>\n                                    Portrayed By: {item.portrayed}\n                                </li>\n                            </div>\n                                \n                        </div>\n                        \n                    </ul>\n                </div>\n                \n               \n            ))}\n\n        </div>\n    )\n}\nexport default CharacterGrid"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;;;AACA,MAAMC,aAAa,GAAG,QAAa;EAAA,IAAZ;IAACC;EAAD,CAAY;EAC/B,oBACI;IAAK,SAAS,EAAC,OAAf;IAAA,UACKA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACX;MAAK,SAAS,EAAC,MAAf;MAAA,uBACI;QAAA,wBACI;UAAA,uBACI;YAAK,SAAS,EAAC,gBAAf;YAAA,uBACI;cAAK,GAAG,EAAGA,IAAI,CAACC,GAAhB;cAAqB,SAAS,EAAC,WAA/B;cAA0C,GAAG,EAAC;YAA9C;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAMI;UAAK,SAAS,EAAC,SAAf;UAAA,uBACI;YAAK,SAAS,EAAC,MAAf;YAAA,wBACI;cAAA,UACKD,IAAI,CAACE;YADV;cAAA;cAAA;cAAA;YAAA,QADJ,eAII;cAAA,gBACMF,IAAI,CAACG,QADX;YAAA;cAAA;cAAA;cAAA;YAAA,QAJJ,eAOI;cAAA,6BACmBH,IAAI,CAACI,SADxB;YAAA;cAAA;cAAA;cAAA;YAAA,QAPJ;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAiCH,CAlCD;;KAAMP,a;AAmCN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}